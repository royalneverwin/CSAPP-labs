                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Include your name and ID here.
                            | #1900011102
                            | #王新昊
                            | # Describe how and why you modified the baseline code.
                            | #
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x000:                      | ncopy:
                            | 
                            | ##################################################################
                            | # You can modify this portion
                            |  # Loop header
0x000: c0f2f6ffffffffffffff |   iaddq $-10, %rdx
0x00a: 72d401000000000000   |   jl Loop  # if so, goto Done:
0x013: 50a70000000000000000 | Loop1:  mrmovq (%rdi), %r10 # read val from src...
0x01d: 50b70800000000000000 |   mrmovq 8(%rdi), %r11
0x027: 62aa                 |   andq %r10, %r10
0x029: 40a60000000000000000 |   rmmovq %r10, (%rsi)
0x033: 714600000000000000   |  jle Loop2
0x03c: c0f00100000000000000 |   iaddq $1, %rax
0x046: 50a71000000000000000 | Loop2:  mrmovq 16(%rdi), %r10
0x050: 40b60800000000000000 |   rmmovq %r11, 8(%rsi) # ...and store it to dst
0x05a: 62bb                 |   andq %r11, %r11
0x05c: 716f00000000000000   |   jle Loop3  # if so, goto Npos:
0x065: c0f00100000000000000 |   iaddq $1, %rax
0x06f: 50b71800000000000000 | Loop3:  mrmovq 24(%rdi), %r11
0x079: 40a61000000000000000 |   rmmovq %r10, 16(%rsi) # ...and store it to dst
0x083: 62aa                 |   andq %r10, %r10
0x085: 719800000000000000   |   jle Loop4  # if so, goto Npos:
0x08e: c0f00100000000000000 |   iaddq $1, %rax
0x098: 50a72000000000000000 | Loop4:  mrmovq 32(%rdi), %r10
0x0a2: 40b61800000000000000 |   rmmovq %r11, 24(%rsi) # ...and store it to dst
0x0ac: 62bb                 |   andq %r11, %r11
0x0ae: 71c100000000000000   |   jle Loop5  # if so, goto Npos:
0x0b7: c0f00100000000000000 |   iaddq $1, %rax
0x0c1: 50b72800000000000000 | Loop5:  mrmovq 40(%rdi), %r11
0x0cb: 40a62000000000000000 |   rmmovq %r10, 32(%rsi) # ...and store it to dst
0x0d5: 62aa                 |   andq %r10, %r10
0x0d7: 71ea00000000000000   |   jle Loop6  # if so, goto Npos:
0x0e0: c0f00100000000000000 |   iaddq $1, %rax
0x0ea: 50a73000000000000000 | Loop6:  mrmovq 48(%rdi), %r10
0x0f4: 40b62800000000000000 |   rmmovq %r11, 40(%rsi) # ...and store it to dst
0x0fe: 62bb                 |   andq %r11, %r11
0x100: 711301000000000000   |   jle Loop7  # if so, goto Npos:
0x109: c0f00100000000000000 |   iaddq $1, %rax
0x113: 50b73800000000000000 | Loop7:  mrmovq 56(%rdi), %r11
0x11d: 40a63000000000000000 |   rmmovq %r10, 48(%rsi) # ...and store it to dst
0x127: 62aa                 |   andq %r10, %r10
0x129: 713c01000000000000   |   jle Loop8  # if so, goto Npos:
0x132: c0f00100000000000000 |   iaddq $1, %rax
0x13c: 50a74000000000000000 | Loop8:  mrmovq 64(%rdi), %r10
0x146: 40b63800000000000000 |   rmmovq %r11, 56(%rsi) # ...and store it to dst
0x150: 62bb                 |   andq %r11, %r11
0x152: 716501000000000000   |   jle Loop9  # if so, goto Npos:
0x15b: c0f00100000000000000 |   iaddq $1, %rax
0x165: 50b74800000000000000 | Loop9:  mrmovq 72(%rdi), %r11
0x16f: 40a64000000000000000 |   rmmovq %r10, 64(%rsi) # ...and store it to dst
0x179: 62aa                 |   andq %r10, %r10
0x17b: 718e01000000000000   |   jle Loop10   # if so, goto Npos:
0x184: c0f00100000000000000 |   iaddq $1, %rax
0x18e: 40b64800000000000000 | Loop10: rmmovq %r11, 72(%rsi)
0x198: 62bb                 |   andq %r11, %r11
0x19a: 71ad01000000000000   |   jle Test1  # if so, goto Npos:
0x1a3: c0f00100000000000000 |   iaddq $1, %rax
0x1ad: c0f75000000000000000 | Test1:  iaddq $80, %rdi  # src++
0x1b7: c0f65000000000000000 |   iaddq $80, %rsi  # dst++
0x1c1: c0f2f6ffffffffffffff |   iaddq $-10, %rdx # len-- + judge
0x1cb: 751300000000000000   |   jge Loop1  # if so, goto Loop:
0x1d4: c0f20700000000000000 | Loop:   iaddq $7, %rdx
0x1de: 72f901000000000000   |   jl Less
0x1e7: 763c02000000000000   |   jg More
0x1f0: 705703000000000000   |   jmp End3
0x1f9: c0f20200000000000000 | Less:  iaddq $2, %rdx
0x203: 73a903000000000000   |   je End1
0x20c: c0f2ffffffffffffffff |   iaddq $-1, %rdx
0x216: 738003000000000000   |   je End2
0x21f: 90                   |   ret
0x220: c0f20100000000000000 | MoreLess: iaddq $1, %rdx
0x22a: 722e03000000000000   |    jl End4
0x233: 700503000000000000   |    jmp End5
0x23c: c0f2fdffffffffffffff | More:  iaddq $-3, %rdx
0x246: 722002000000000000   |   jl MoreLess
0x24f: 73dc02000000000000   |  je End6
0x258: c0f2feffffffffffffff |  iaddq $-2, %rdx
0x262: 72b302000000000000   |  jl End7
0x26b: 738a02000000000000   |  je End8
0x274: 50a74000000000000000 | End9: mrmovq 64(%rdi), %r10
0x27e: 40a64000000000000000 |   rmmovq %r10, 64(%rsi)
0x288: 62aa                 |   andq %r10, %r10
0x28a: 50a73800000000000000 | End8:  mrmovq 56(%rdi), %r10
0x294: 71a702000000000000   |  jle End71
0x29d: c0f00100000000000000 |    iaddq $1, %rax
0x2a7: 40a63800000000000000 | End71: rmmovq %r10, 56(%rsi)
0x2b1: 62aa                 |   andq %r10, %r10
0x2b3: 50a73000000000000000 | End7:   mrmovq 48(%rdi), %r10
0x2bd: 71d002000000000000   |    jle End61
0x2c6: c0f00100000000000000 |    iaddq $1, %rax
0x2d0: 40a63000000000000000 | End61:  rmmovq %r10, 48(%rsi)
0x2da: 62aa                 |   andq %r10, %r10
0x2dc: 50a72800000000000000 | End6:   mrmovq 40(%rdi), %r10
0x2e6: 71f902000000000000   |    jle End51
0x2ef: c0f00100000000000000 |    iaddq $1, %rax
0x2f9: 40a62800000000000000 | End51:  rmmovq %r10, 40(%rsi)
0x303: 62aa                 |   andq %r10, %r10
0x305: 50a72000000000000000 | End5:   mrmovq 32(%rdi), %r10
0x30f: 712203000000000000   |    jle End41
0x318: c0f00100000000000000 |    iaddq $1, %rax
0x322: 40a62000000000000000 | End41:  rmmovq %r10, 32(%rsi)
0x32c: 62aa                 |   andq %r10, %r10
0x32e: 50a71800000000000000 | End4:   mrmovq 24(%rdi), %r10
0x338: 714b03000000000000   |    jle End31
0x341: c0f00100000000000000 |    iaddq $1, %rax
0x34b: 40a61800000000000000 | End31:  rmmovq %r10, 24(%rsi)
0x355: 62aa                 |   andq %r10, %r10
0x357: 50a71000000000000000 | End3:   mrmovq 16(%rdi), %r10
0x361: 717403000000000000   |    jle End21
0x36a: c0f00100000000000000 |    iaddq $1, %rax
0x374: 40a61000000000000000 | End21:  rmmovq %r10, 16(%rsi)
0x37e: 62aa                 |   andq %r10, %r10
0x380: 50a70800000000000000 | End2:   mrmovq 8(%rdi), %r10
0x38a: 719d03000000000000   |    jle End11
0x393: c0f00100000000000000 |    iaddq $1, %rax
0x39d: 40a60800000000000000 | End11:  rmmovq %r10, 8(%rsi)
0x3a7: 62aa                 |   andq %r10, %r10
0x3a9: 50a70000000000000000 | End1:   mrmovq (%rdi), %r10
0x3b3: 71c603000000000000   |    jle End01
0x3bc: c0f00100000000000000 |    iaddq $1, %rax
0x3c6: 40a60000000000000000 | End01:  rmmovq %r10, (%rsi)
0x3d0: 62aa                 |   andq %r10, %r10
0x3d2: 71e503000000000000   |   jle Done
0x3db: c0f00100000000000000 |   iaddq $1, %rax
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x3e5:                      | Done:
0x3e5: 90                   |  ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x3e6:                      | End:
